// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PizzaWebAPI.Model;
using System;

namespace PizzaWebAPI.Migrations
{
    [DbContext(typeof(ModelContext))]
    partial class ModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaWebAPI.Model.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("EmailVerificationHash");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsConfirmed");

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.AccountRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountId");

                    b.Property<bool>("Active");

                    b.Property<int>("Employee_Id");

                    b.Property<string>("RoleName");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountRole");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Employee_Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountRole_Id");

                    b.Property<string>("Phone");

                    b.Property<string>("Position");

                    b.Property<int?>("RestaurantId");

                    b.Property<int>("Restaurant_Id");

                    b.HasKey("Id");

                    b.HasIndex("AccountRole_Id")
                        .IsUnique();

                    b.HasIndex("RestaurantId");

                    b.ToTable("Employee_Data");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Ingredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Menu_Item_Ingredients", b =>
                {
                    b.Property<int>("Menu_Item_Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ingredient_Id");

                    b.Property<int?>("Menu_Items_IdId");

                    b.HasKey("Menu_Item_Id");

                    b.HasIndex("Ingredient_Id");

                    b.HasIndex("Menu_Items_IdId");

                    b.ToTable("Menu_Item_Ingredients");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Menu_Item_Options", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Menu_ItemId");

                    b.Property<string>("Name");

                    b.Property<int>("Order_Menu_Id");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("Menu_ItemId");

                    b.HasIndex("Order_Menu_Id")
                        .IsUnique();

                    b.ToTable("Menu_Item_Options");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Menu_Items", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Has_Ingredients");

                    b.Property<string>("Name");

                    b.Property<int?>("RestaurantId");

                    b.Property<int>("Restaurant_Id");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menu_Items");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Order_Menu_Item_Ingredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("IngredientId");

                    b.Property<int>("Ingredient_Id");

                    b.Property<int?>("Order_Menu_ItemId");

                    b.Property<int>("Order_Menu_Item_Id");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("Order_Menu_ItemId");

                    b.ToTable("Order_Menu_Item_Ingredients");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Order_Menu_Items", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<int?>("Menu_ItemId");

                    b.Property<int>("Menu_Item_Id");

                    b.Property<int>("Menu_Item_Option_Id");

                    b.Property<int?>("OrderId");

                    b.Property<int>("Order_Id");

                    b.HasKey("Id");

                    b.HasIndex("Menu_ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("Order_Menu_Items");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EmployeeId");

                    b.Property<int>("Employee_Id");

                    b.Property<int>("Payment_Type_Id");

                    b.Property<int>("Status_Id");

                    b.Property<decimal>("Total_Price");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("Payment_Type_Id")
                        .IsUnique();

                    b.HasIndex("Status_Id")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Payment_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Payment_Type");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Restaurants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<string>("City");

                    b.Property<float>("CoordX");

                    b.Property<float>("CoordY");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.AccountRole", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.Account", "Account")
                        .WithMany("Roles")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Employee_Data", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.AccountRole", "AccountRole")
                        .WithOne("Employee")
                        .HasForeignKey("PizzaWebAPI.Model.Employee_Data", "AccountRole_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaWebAPI.Model.Restaurants", "Restaurant")
                        .WithMany("Employee")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Menu_Item_Ingredients", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.Ingredients", "Ingredients")
                        .WithMany("Menu_Item_Ingredients")
                        .HasForeignKey("Ingredient_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaWebAPI.Model.Menu_Items", "Menu_Items_Id")
                        .WithMany("Menu_Item_Ingredients")
                        .HasForeignKey("Menu_Items_IdId");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Menu_Item_Options", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.Menu_Items", "Menu_Item")
                        .WithMany("Menu_Item_Options")
                        .HasForeignKey("Menu_ItemId");

                    b.HasOne("PizzaWebAPI.Model.Order_Menu_Items", "Order_Menu_Item")
                        .WithOne("Menu_Item_Option")
                        .HasForeignKey("PizzaWebAPI.Model.Menu_Item_Options", "Order_Menu_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Menu_Items", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.Restaurants", "Restaurant")
                        .WithMany("Menu_Items")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Order_Menu_Item_Ingredients", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.Ingredients", "Ingredient")
                        .WithMany("Order_Menu_Item_Ingredients")
                        .HasForeignKey("IngredientId");

                    b.HasOne("PizzaWebAPI.Model.Order_Menu_Items", "Order_Menu_Item")
                        .WithMany("Order__Menu_Item_Ingredients")
                        .HasForeignKey("Order_Menu_ItemId");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Order_Menu_Items", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.Menu_Items", "Menu_Item")
                        .WithMany("Order_Menu_Items")
                        .HasForeignKey("Menu_ItemId");

                    b.HasOne("PizzaWebAPI.Model.Orders", "Order")
                        .WithMany("Order_Menu_Items")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Orders", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.Employee_Data", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("PizzaWebAPI.Model.Payment_Type", "Payment_Type")
                        .WithOne("Order")
                        .HasForeignKey("PizzaWebAPI.Model.Orders", "Payment_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaWebAPI.Model.Status", "Status")
                        .WithOne("Order")
                        .HasForeignKey("PizzaWebAPI.Model.Orders", "Status_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
