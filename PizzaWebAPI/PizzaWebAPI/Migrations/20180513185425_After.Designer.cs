// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PizzaWebAPI.Model;
using System;

namespace PizzaWebAPI.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20180513185425_After")]
    partial class After
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaWebAPI.Model.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("EmailVerificationHash");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsConfirmed");

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.AccountRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountId");

                    b.Property<bool>("Active");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("RoleName");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("accounts_roles");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.EmployeeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountRoleId");

                    b.Property<string>("Phone");

                    b.Property<string>("Position");

                    b.Property<int>("RestaurantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountRoleId")
                        .IsUnique();

                    b.HasIndex("RestaurantId");

                    b.ToTable("employee_data");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.ToTable("ingredients");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("HasIngredients");

                    b.Property<string>("Name");

                    b.Property<int>("RestaurantId");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("menu_items");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.MenuItem_Ingredient", b =>
                {
                    b.Property<int>("MenuItemId");

                    b.Property<int>("IngredientId");

                    b.HasKey("MenuItemId");

                    b.HasIndex("IngredientId");

                    b.ToTable("menu_items_-_ingredients");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.MenuItemOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MenuItemId");

                    b.Property<string>("Name");

                    b.Property<int>("OrderMenuId");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.ToTable("menu_item_options");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EmployeeId");

                    b.Property<int>("PaymentTypeId");

                    b.Property<int>("StatusId");

                    b.Property<decimal>("TotalPrice");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("StatusId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.OrderMenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<int>("MenuItemId");

                    b.Property<int>("MenuItemOptionId");

                    b.Property<int>("OrderId");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("MenuItemOptionId");

                    b.HasIndex("OrderId");

                    b.ToTable("order_menu_items");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.OrderMenuItem_Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IngredientId");

                    b.Property<int>("OrderMenuItemId");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("OrderMenuItemId");

                    b.ToTable("order_menu_items_-_ingredients");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("payment_types");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<string>("City");

                    b.Property<float>("CoordX");

                    b.Property<float>("CoordY");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("restaurants");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("statuses");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.AccountRole", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.Account", "Account")
                        .WithMany("Roles")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.EmployeeData", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.AccountRole", "AccountRole")
                        .WithOne("Employee")
                        .HasForeignKey("PizzaWebAPI.Model.EmployeeData", "AccountRoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaWebAPI.Model.Restaurant", "Restaurant")
                        .WithMany("Employee")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaWebAPI.Model.MenuItem", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.Restaurant", "Restaurant")
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaWebAPI.Model.MenuItem_Ingredient", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.Ingredient", "Ingredient")
                        .WithMany("MenuItemIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaWebAPI.Model.MenuItem", "MenuItem")
                        .WithMany("MenuItemIngredients")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaWebAPI.Model.MenuItemOption", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.MenuItem", "MenuItem")
                        .WithMany("MenuItemOptions")
                        .HasForeignKey("MenuItemId");
                });

            modelBuilder.Entity("PizzaWebAPI.Model.Order", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.EmployeeData", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("PizzaWebAPI.Model.PaymentType", "PaymentType")
                        .WithMany("Order")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaWebAPI.Model.Status", "Status")
                        .WithMany("Order")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaWebAPI.Model.OrderMenuItem", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.MenuItem", "MenuItem")
                        .WithMany("OrderMenuItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaWebAPI.Model.MenuItemOption", "MenuItemOption")
                        .WithMany("OrderMenuItems")
                        .HasForeignKey("MenuItemOptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaWebAPI.Model.Order", "Order")
                        .WithMany("OrderMenuItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaWebAPI.Model.OrderMenuItem_Ingredient", b =>
                {
                    b.HasOne("PizzaWebAPI.Model.Ingredient", "Ingredient")
                        .WithMany("OrderMenuItemIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaWebAPI.Model.OrderMenuItem", "OrderMenuItem")
                        .WithMany("OrderMenuItemIngredients")
                        .HasForeignKey("OrderMenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
